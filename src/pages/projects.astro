---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Projects">
  <main>
    <div class="flex justify-center px-4">
      <div class="w-[1000px]">
        <div
          class="text-accent font-jersey sm:text-4xl text-2xl my-5 text-center"
        >
          Projects
        </div>
        <div
          class="text-accent text-justify border-2 border-accent border-opacity-40 p-4"
        >
          <div class="flex justify-between items-center">
            <div class="flex gap-x-2 items-center">
              <span class="font-jersey sm:text-3xl text-2xl text-white"
                >Somoyer School</span
              >
              <a target="_blank" href="https://somoy.school/">
                <svg
                  fill="#A6EC61"
                  xmlns="http://www.w3.org/2000/svg"
                  x="0px"
                  y="0px"
                  width="25"
                  height="25"
                  viewBox="0 0 128 128"
                >
                  <path
                    d="M 84 11 C 82.3 11 81 12.3 81 14 C 81 15.7 82.3 17 84 17 L 106.80078 17 L 60.400391 63.400391 C 59.200391 64.600391 59.200391 66.499609 60.400391 67.599609 C 61.000391 68.199609 61.8 68.5 62.5 68.5 C 63.2 68.5 63.999609 68.199609 64.599609 67.599609 L 111 21.199219 L 111 44 C 111 45.7 112.3 47 114 47 C 115.7 47 117 45.7 117 44 L 117 14 C 117 12.3 115.7 11 114 11 L 84 11 z M 24 31 C 16.8 31 11 36.8 11 44 L 11 104 C 11 111.2 16.8 117 24 117 L 84 117 C 91.2 117 97 111.2 97 104 L 97 59 C 97 57.3 95.7 56 94 56 C 92.3 56 91 57.3 91 59 L 91 104 C 91 107.9 87.9 111 84 111 L 24 111 C 20.1 111 17 107.9 17 104 L 17 44 C 17 40.1 20.1 37 24 37 L 69 37 C 70.7 37 72 35.7 72 34 C 72 32.3 70.7 31 69 31 L 24 31 z"
                  ></path>
                </svg>
              </a>
            </div>
          </div>
          <div class="mt-2 font-ubuntu text-grey1 text-sm sm:text-base">
            Somoyer School is an EdTech made for Somoy Media. It will contain
            courses focused for content creation and media houses. This project
            will feature courses made by experienced Instructors of their
            respective fields. Users have to pay a premium in order to attain
            this courses. Also, there will be additional notes, video lessons,
            quizes and assignments with every courses so that the instructor can
            examine the progress of any student. After successsful completion of
            any course, A student will get a certificate verified by the
            Instructor.
          </div>
          <div class="flex flex-col gap-y-2 font-ubuntu text-base">
            <div class="mt-5">What I did</div>
            <div class="text-grey1 text-sm sm:text-base">
              <ul>
                <li>
                  <span class="text-accent font-bold">- </span> Built and designed
                  the UI from scratch, structured the frontend layouts, created re-usable
                  components, designed according to Figma while maintaining responsiveness.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> Used internationlization
                  for mulit-language support.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> Integrated APIs using
                  Axios, and made the frontend production ready for deployment.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> Integrated SSL payment
                  gateway.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> Created a complex
                  module system which has auto lesson unlocking based on lesson watch,
                  video streaming, assignment submission and quiz marking.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> Used cloudflare stream
                  player api to auto unlock lesson if an user watched more than 30%
                  of a video.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> Explored and learnt
                  about different build processes, used VITE-SSG for server-side
                  generation and added custom meta data for SEO.
                </li>
              </ul>
            </div>
            <div>Utilized: Vue, Vuex, Vite-SSG, Axios, Tailwind</div>
            <div></div>
          </div>
          <div></div>
        </div>
        <div
          class="text-accent text-justify border-2 border-accent border-opacity-30 p-4 mt-4"
        >
          <div class="flex justify-between items-center">
            <div class="flex gap-x-2 items-center">
              <span class="font-jersey sm:text-3xl text-2xl text-white"
                >Livestock related project
              </span>
            </div>
          </div>
          <div class="mt-2 font-ubuntu text-grey1 text-sm sm:text-base">
            This project is related to livestock and has very niche audience
            base. It has real-time data updates, safe payment gateway
            integration. Details cannot be revealed ss this project is still not
            in production yet.
          </div>
          <div class="flex flex-col gap-y-2 font-ubuntu text-base">
            <div class="mt-5">What I did</div>
            <div class="text-grey1 text-sm sm:text-base">
              <ul>
                <li>
                  <span class="text-accent font-bold">- </span> Created a new boilerplate
                  combining tailwind and vuetify.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span>Planned according
                  to the strict deadline, structured the frontend layouts.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span>Guided a team of
                  two to deliver the project within three weeks with API
                  integration.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> Used treeshaking
                  to reduce build file size and time.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> Integrated Bkash
                  payment gateway.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> generated QR code
                  to verify payment completion.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> used Intersection
                  Observer to implement infinite scrolling.
                </li>
                <li></li>
              </ul>
              <div>
                Utilized: Vue, TypeScript, Pinia, Vuetify, Tailwind, Axios
              </div>
              <div></div>
            </div>
          </div>
        </div>
        <div
          class="text-accent text-justify border-2 border-accent border-opacity-40 p-4 mt-4"
        >
          <div class="flex justify-between items-center">
            <div class="flex gap-x-2 items-center">
              <span class="font-jersey sm:text-3xl text-2xl text-white"
                >Foodqo RMS
              </span>
              <a target="_blank" href="https://foodqo.com/">
                <svg
                  fill="#A6EC61"
                  xmlns="http://www.w3.org/2000/svg"
                  x="0px"
                  y="0px"
                  width="25"
                  height="25"
                  viewBox="0 0 128 128"
                >
                  <path
                    d="M 84 11 C 82.3 11 81 12.3 81 14 C 81 15.7 82.3 17 84 17 L 106.80078 17 L 60.400391 63.400391 C 59.200391 64.600391 59.200391 66.499609 60.400391 67.599609 C 61.000391 68.199609 61.8 68.5 62.5 68.5 C 63.2 68.5 63.999609 68.199609 64.599609 67.599609 L 111 21.199219 L 111 44 C 111 45.7 112.3 47 114 47 C 115.7 47 117 45.7 117 44 L 117 14 C 117 12.3 115.7 11 114 11 L 84 11 z M 24 31 C 16.8 31 11 36.8 11 44 L 11 104 C 11 111.2 16.8 117 24 117 L 84 117 C 91.2 117 97 111.2 97 104 L 97 59 C 97 57.3 95.7 56 94 56 C 92.3 56 91 57.3 91 59 L 91 104 C 91 107.9 87.9 111 84 111 L 24 111 C 20.1 111 17 107.9 17 104 L 17 44 C 17 40.1 20.1 37 24 37 L 69 37 C 70.7 37 72 35.7 72 34 C 72 32.3 70.7 31 69 31 L 24 31 z"
                  ></path>
                </svg>
              </a>
            </div>
          </div>
          <div class="mt-2 font-ubuntu text-grey1 text-sm sm:text-base">
            FoodQo is a restaurant management software designed to streamline
            operations and enhance revenue. It offers features like real-time
            sales updates, automated inventory management, recipe management,
            instant sales and expense reports, smooth billing processes, item
            performance tracking, and seamless reservation handling. FoodQo
            allows managing multiple branches from a single account, providing
            a comprehensive solution for restaurant owners to optimize and
            grow their business. It has both desktop app and web app.
          </div>
          <div class="flex flex-col gap-y-2 font-ubuntu text-base">
            <div class="mt-5">What I did</div>
            <div class="text-grey1 text-sm sm:text-base">
              <ul>
                <li>
                  <span class="text-accent font-bold">- </span> Worked on POS for
                  web app which is built on NuxtJS.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> developed UI for
                  reservation section.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> Used IndexedDB
                  for parked bill.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> Integrated APIs
                  using Axios gateway.
                </li>
                <li></li>
              </ul>
              <div>Utilized: Nuxt, Vuex, Vuetify, Axios</div>
              <div></div>
            </div>
          </div>
        </div>
        <div
          class="text-accent text-justify border-2 border-accent border-opacity-40 p-4 mt-4"
        >
          <div class="flex justify-between items-center">
            <div class="flex gap-x-2 items-center">
              <span class="font-jersey sm:text-3xl text-2xl text-white"
                >Point of Sale
              </span>
              <a
                target="_blank"
                href="https://github.com/shifat514/Point-Of-Sale/"
              >
                <svg
                  fill="#A6EC61"
                  xmlns="http://www.w3.org/2000/svg"
                  x="0px"
                  y="0px"
                  width="25"
                  height="25"
                  viewBox="0 0 128 128"
                >
                  <path
                    d="M 84 11 C 82.3 11 81 12.3 81 14 C 81 15.7 82.3 17 84 17 L 106.80078 17 L 60.400391 63.400391 C 59.200391 64.600391 59.200391 66.499609 60.400391 67.599609 C 61.000391 68.199609 61.8 68.5 62.5 68.5 C 63.2 68.5 63.999609 68.199609 64.599609 67.599609 L 111 21.199219 L 111 44 C 111 45.7 112.3 47 114 47 C 115.7 47 117 45.7 117 44 L 117 14 C 117 12.3 115.7 11 114 11 L 84 11 z M 24 31 C 16.8 31 11 36.8 11 44 L 11 104 C 11 111.2 16.8 117 24 117 L 84 117 C 91.2 117 97 111.2 97 104 L 97 59 C 97 57.3 95.7 56 94 56 C 92.3 56 91 57.3 91 59 L 91 104 C 91 107.9 87.9 111 84 111 L 24 111 C 20.1 111 17 107.9 17 104 L 17 44 C 17 40.1 20.1 37 24 37 L 69 37 C 70.7 37 72 35.7 72 34 C 72 32.3 70.7 31 69 31 L 24 31 z"
                  ></path>
                </svg>
              </a>
            </div>
          </div>
          <div class="mt-2 font-ubuntu text-grey1 text-sm sm:text-base">
            It's a point of sale inspired from a restaurant management
            system. One can create a order from a menu, place the order
            under a table, update the order, and pay bill to see the
            transaction in a seperate table.
          </div>
          <div class="flex flex-col gap-y-2 font-ubuntu text-base">
            <div class="mt-5">What I did</div>
            <div class="text-grey1 text-sm sm:text-base">
              <ul>
                <li>
                  <span class="text-accent font-bold">- </span> designed and
                  developed UI.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> created UI flow
                  , learned how to use Vuex for storing and updating data.
                </li>
                <li>
                  <span class="text-accent font-bold">- </span> Learned how to
                  re-use components.
                </li>
                <li></li>
              </ul>
              <div>Utilized: Vue, Vite, Vuex, Tailwind</div>
              <div></div>
            </div>
          </div>
        </div>
      </div>
      <script>
        // let expand1 = document.getElementById("expand1");
        // let expand2 = document.getElementById("expand2");

        // let toggle = false;
        // let details1 = document.getElementById("work1");
        // let details2 = document.getElementById("work2");

        // expand1?.addEventListener("click", () => {
        //   // toggle = !toggle
        //   details1?.classList.toggle("hidden");
        // });
        // expand2?.addEventListener("click", () => {
        //   // toggle = !toggle
        //   details2?.classList.toggle("hidden");
        // });
      </script>
    </div>
  </main></Layout
>
